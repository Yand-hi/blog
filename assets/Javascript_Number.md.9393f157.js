import{_ as s,c as a,o as n,R as e}from"./chunks/framework.35669211.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Javascript/Number.md"}'),l={name:"Javascript/Number.md"},t=e(`<h3 id="isnan" tabindex="-1">isNaN() <a class="header-anchor" href="#isnan" aria-label="Permalink to &quot;isNaN()&quot;">​</a></h3><p>返回 bool 值，判断是否为 NaN 值</p><h3 id="isfinite" tabindex="-1">isFinite() <a class="header-anchor" href="#isfinite" aria-label="Permalink to &quot;isFinite()&quot;">​</a></h3><p>返回 bool 值，判断是否为有限数</p><h3 id="isinteger" tabindex="-1">isInteger() <a class="header-anchor" href="#isinteger" aria-label="Permalink to &quot;isInteger()&quot;">​</a></h3><p>返回 bool 值，判断数字是否为整数</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isInteger</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">123.0</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//  true</span></span></code></pre></div><h3 id="parsefloat-parseint" tabindex="-1">parseFloat &amp; parseInt <a class="header-anchor" href="#parsefloat-parseint" aria-label="Permalink to &quot;parseFloat &amp; parseInt&quot;">​</a></h3><p><em>全局函数，不属于任何对象</em></p><ul><li>parseFloat(string) 转换成浮点数，v-model修饰符.number就用的这个；</li><li>parseInt(string) 转换为整数</li></ul><h3 id="bigint-大整形" tabindex="-1">BigInt 大整形 <a class="header-anchor" href="#bigint-大整形" aria-label="Permalink to &quot;BigInt 大整形&quot;">​</a></h3><p>普通数字后面加个 n 定义一个 BigInt;</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BigInt</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bigint</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//   true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0</span><span style="color:#C792EA;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//   false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">0</span><span style="color:#C792EA;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//   true</span></span></code></pre></div>`,13),o=[t];function p(r,i,c,y,C,D){return n(),a("div",null,o)}const h=s(l,[["render",p]]);export{d as __pageData,h as default};
