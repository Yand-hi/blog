import{_ as a,c as t,o as e,R as l}from"./chunks/framework.35669211.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"HTTP网络基础/http与https.md"}'),r={name:"HTTP网络基础/http与https.md"},o=l('<p><em>HTTP + 加密 + 身份认证 + 完整性保护 = HTTPS</em></p><h2 id="http-不足之处" tabindex="-1">http 不足之处 <a class="header-anchor" href="#http-不足之处" aria-label="Permalink to &quot;http 不足之处&quot;">​</a></h2><ol><li>通信使用明文（不加密），请求与响应内容随时有可能被窃取；</li><li>请求与响应过程不会验证通信双方的身份，同样不安全；</li><li>无法保证报文的完整性，很有可能遭到篡改</li></ol><p><strong>针对 http 的缺点进行改进</strong></p><h2 id="通信加密" tabindex="-1">通信加密 <a class="header-anchor" href="#通信加密" aria-label="Permalink to &quot;通信加密&quot;">​</a></h2><ol><li>SSL 建立安全通信线路 http 可以通过和 SSL / TLS 的组合使用，加密 http 通信内容；</li></ol><p><strong>用 SSL 建立安全通信线路，就可以在这条线路上进行 http 通信了，这种结合就叫 https（超文本传输安全协议）</strong></p><ol start="2"><li>通信内容加密 要求通信双方都同时具备加密与解密机制，但是通信线路仍然不安全，所以仍有被篡改报文的风险；</li></ol><h2 id="验证通信双方身份" tabindex="-1">验证通信双方身份 <a class="header-anchor" href="#验证通信双方身份" aria-label="Permalink to &quot;验证通信双方身份&quot;">​</a></h2><h3 id="ssl-证书" tabindex="-1">SSL 证书 <a class="header-anchor" href="#ssl-证书" aria-label="Permalink to &quot;SSL 证书&quot;">​</a></h3><ul><li>SSL 同样提供了一种证书手段，来验证通信双方身份</li><li>证书由值得信任第三方机构颁发，<strong>需要花钱</strong></li></ul><h2 id="确保报文完整性" tabindex="-1">确保报文完整性 <a class="header-anchor" href="#确保报文完整性" aria-label="Permalink to &quot;确保报文完整性&quot;">​</a></h2><p>常用的是 MD5 和 SHA-1 等散列值进行校验，以及用数字签名来确认文件</p><h2 id="https" tabindex="-1">HTTPS <a class="header-anchor" href="#https" aria-label="Permalink to &quot;HTTPS&quot;">​</a></h2><p>HTTPS 并不是一种新的协议，只是 HTTP 通信接口部分用 SSL 和 TLS 协议代替而已； HTTP 会先与 SSL 通信，再由 SSL 与 TCP 通信；</p><h3 id="ssl加密方式" tabindex="-1">SSL加密方式 <a class="header-anchor" href="#ssl加密方式" aria-label="Permalink to &quot;SSL加密方式&quot;">​</a></h3><ul><li>公开密钥加密：公开加密算法，将密钥进行保密；</li><li>共享密钥加密：使用同一个密钥进行加密和解密，又叫对称密钥加密；</li></ul><p>公开密钥也需要进行证书认证，证明其真实性</p><p><em>共享密钥加密的密钥在传输过程中可能会被窃取，公开密钥加密通信速度比较慢</em></p><p><strong>HTTPS 采用的是混合加密机制</strong></p><h2 id="ssl-与-tls" tabindex="-1">SSL 与 TLS <a class="header-anchor" href="#ssl-与-tls" aria-label="Permalink to &quot;SSL 与 TLS&quot;">​</a></h2><p>TSL是以SSL为原型开发的协议，有时会统一称该协议为SSL。</p><h3 id="使用-ssl-会变慢" tabindex="-1">使用 SSL 会变慢 <a class="header-anchor" href="#使用-ssl-会变慢" aria-label="Permalink to &quot;使用 SSL 会变慢&quot;">​</a></h3><p>HTTPS 也存在一些问题，那就是当使用 SSL 时，它的处理速度会变慢；</p><ul><li>通信慢：通信过程需要处理，时间延长</li><li>处理速度慢：大量消耗网络资源，CPU及内存等资源</li></ul><p>可以使用 SSL 加速器这种（专用服务器）硬件来改善该问题。</p><p><em>在进行加密处理时，并非对所有内容都进行加密处理，而是仅在那些需要信息隐藏时才会加密，以节约资源。</em></p>',27),s=[o];function i(h,S,n,p,d,c){return e(),t("div",null,s)}const _=a(r,[["render",i]]);export{u as __pageData,_ as default};
